<project name="Shivasoft ANT Tutorial" default="deployCode" basedir="." xmlns:sf="antlib:com.salesforce">
<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="lib/ant-contrib-1.0b3.jar"/>
		</classpath>
</taskdef>
	 <property environment="env"/>
  <condition property="changeLogCount" value="${env.CHANGESET_SIZE}" else="1">
    <isset property="env.CHANGESET_SIZE"/>
  </condition>

  <target name="is-first-build">
    <condition property="first.build">
      <equals arg1="${env.BUILD_NUMBER}" arg2="1"/>
    </condition>
  </target>

  <!-- Check environment variables only in builds 2+ -->
  <target name="check-non-initial-build" description="Check git env vars at build 2+" depends="is-first-build" if="env.JENKINS_URL" unless="first.build">
    <echo>GIT_PREVIOUS_COMMIT is ${env.GIT_PREVIOUS_COMMIT}</echo>
    <echo>env.GIT_PREVIOUS_SUCCESSFUL_COMMIT is ${env.GIT_PREVIOUS_SUCCESSFUL_COMMIT}</echo>
    <fail message="GIT_PREVIOUS_COMMIT not set" unless="env.GIT_PREVIOUS_COMMIT"/>
    <!-- Prior successful commit may not exist - this MUST BE OPTIONAL -->
    <!-- <fail message="GIT_PREVIOUS_SUCCESSFUL_COMMIT not set" unless="env.GIT_PREVIOUS_SUCCESSFUL_COMMIT"/> -->
  </target>

  <!-- Check environment variables in all builds -->
  <target name="check-git-env-vars" description="Check all git env vars" depends="check-non-initial-build" if="env.JENKINS_URL">
    <echo>env.WORKSPACE is ${env.WORKSPACE}</echo>
    <echo>env.GIT_AUTHOR_EMAIL is ${env.GIT_AUTHOR_EMAIL}</echo>
    <echo>env.GIT_AUTHOR_NAME is ${env.GIT_AUTHOR_NAME}</echo>
    <echo>env.GIT_BRANCH is ${env.GIT_BRANCH}</echo>
    <echo>env.GIT_COMMIT is ${env.GIT_COMMIT}</echo>
    <echo>env.GIT_COMMITTER_EMAIL is ${env.GIT_COMMITTER_EMAIL}</echo>
    <echo>env.GIT_COMMITTER_NAME is ${env.GIT_COMMITTER_NAME}</echo>
    <echo>env.GIT_LOCAL_BRANCH is ${env.GIT_LOCAL_BRANCH}</echo>
    <echo>env.GIT_URL is ${env.GIT_URL}</echo>
    <echo>GIT_ env var checks all passed</echo>
    <fail message="GIT_AUTHOR_EMAIL not set" unless="env.GIT_AUTHOR_EMAIL"/>
    <fail message="GIT_AUTHOR_NAME not set" unless="env.GIT_AUTHOR_NAME"/>
    <fail message="GIT_BRANCH not set" unless="env.GIT_BRANCH"/>
    <fail message="GIT_COMMIT not set" unless="env.GIT_COMMIT"/>
    <fail message="GIT_COMMITTER_EMAIL not set" unless="env.GIT_COMMITTER_EMAIL"/>
    <fail message="GIT_COMMITTER_NAME not set" unless="env.GIT_COMMITTER_NAME"/>
    <fail message="GIT_LOCAL_BRANCH not set" unless="env.GIT_LOCAL_BRANCH"/>
    <fail message="GIT_URL not set" unless="env.GIT_URL"/>
  </target>

  <!-- Synchronize repositories -->
  <target name="sync" description="Synchronize git repositories">
    <git command="pull">
      <args>
        <arg value="--all"/>
        <arg value="--prune"/>
      </args>
    </git>
  </target>

  <target name="increment" description="Increment build number">
    <exec executable="hostname" outputproperty="increment.hostname"/>
    <git command="pull">
      <args>
        <arg value="--all"/>
      </args>
    </git>
    <buildnumber/>
    <git command="commit">
      <args>
        <arg value="-m"/>
        <arg value="[${ant.project.name}] ${user.name} on ${increment.hostname} build++, was ${build.number}"/>
        <arg value="build.number"/>
      </args>
    </git>
  </target>

  <target name="increment-and-push" depends="increment" description="Increment build number and push to remote repository">
    <git command="push"/>
  </target>

  <!-- Info about this repository -->
  <target name="info" description="Report info about this repo">
    <echo>java is ${java.version}</echo>
    <echo>user dir is ${user.dir}</echo>
    <git command="branch" />
    <!-- JENKINS-41906 reports that master branch built without any commits.
         This reports commits in the changeset for this build -->
    <echo>Displaying ${changeLogCount} git log messages in changeset for this build - CHANGESET_SIZE=${env.CHANGESET_SIZE}</echo>
    <git command="log">
      <args>
        <arg value="-n"/>
        <arg value="${changeLogCount}"/>
      </args>
    </git>
    <echo>End of ${changeLogCount} git log messages in changeset for this build</echo>
  </target>
<macrodef name="gitDiff">
		<sequential>
			<exec executable="git" outputproperty="git.diff">
				<arg value="diff" />
				<arg value="--pretty=format:" />
				<arg value="--name-only" />
				<arg value="${env.GIT_COMMIT}" />
				<arg value="${env.GIT_PREVIOUS_SUCCESSFUL_COMMIT}" />
			</exec>
			<echo>${git.diff}</echo>
		</sequential>
</macrodef>

<target name="diffBuilderWithGitCommit">
		<delete dir="deploy-sf"/>
		<mkdir dir="deploy-sf"/>
		
		<echo>Previous Known Successful GIT Commit : ${env.GIT_PREVIOUS_SUCCESSFUL_COMMIT}</echo>
		<gitDiff/>
		<for list="${git.diff}" param="currentDiff" delimiter="${line.separator}">
			<sequential>
				<if>
					<and>
						<available file="@{currentDiff}"/>
						<matches string="@{currentDiff}" pattern="force-app/"/>
					</and>
					<then>
						<propertyregex
							property="currentDiffWithoutSRC"
							input="@{currentDiff}"
							regexp="force-app\/([a-zA-Z$]*\/[a-zA-Z0-9\/\.\_-]*)"
							select="\1"
							casesensitive="true" 
							override="true"
							defaultValue=""/>
						<echo>Current Component : ${currentDiffWithoutSRC}</echo>
						<copy todir="deploy-sf" verbose="false">
							<fileset dir="force-app">
								<include name="${currentDiffWithoutSRC}" />
							</fileset>
						</copy>
						<if>
							<available file="@{currentDiff}-meta.xml"/>
							<then>
								<echo>Generating meta-xml : @{currentDiff}</echo>
								<copy todir="deploy-sf" verbose="false">
									<fileset dir="force-app">
										<include name="${currentDiffWithoutSRC}-meta.xml" />
									</fileset>
								</copy>
							</then>
						</if>
					</then>
				</if>
			</sequential>
		</for>
</target>
</project>
